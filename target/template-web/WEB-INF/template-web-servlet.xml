<?xml version="1.0" encoding="UTF-8"?>   
<beans    
	xmlns="http://www.springframework.org/schema/beans"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context"  
	xmlns:util="http://www.springframework.org/schema/util"  
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="   
	http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd   
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-3.2.xsd   
	http://www.springframework.org/schema/util    
	http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	">
    
	<!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.cnlive.template-web" use-default-filters="false">
		<!-- 扫描controller的注解 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <mvc:annotation-driven/>相当于注册了RequestMappingHandlerMapping和RequestMappingHandlerAdapter两个bean -->
	<!--	<mvc:annotation-driven />-->
	 
	<!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀   -->
	<!-- 视图解析器策略 和 视图解析器 -->
	<!-- 对JSTL提供良好的支持 -->
	<bean   
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">   
		<!-- 默认的viewClass,可以不用配置   
			<property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView" />   
			 -->   
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>   
	<!-- 文件上传  -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 以字节为单位的最大上传文件的大小 -->
		<property name="maxUploadSize" value="104857600" />
	</bean>
   
   <!-- 静态资源文件的配置 -->
   <mvc:resources location="/resources/css/" mapping="/resources/css/**"></mvc:resources>     
   <mvc:resources location="/resources/js/" mapping="/resources/js/**"></mvc:resources>     
   <mvc:resources location="/resources/img/" mapping="/resources/img/**"></mvc:resources>     
   <mvc:resources location="/static/" mapping="/static/**"></mvc:resources>     
        
	<!-- 处理在类级别上的@RequestMapping注解 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />   
    
    <!-- 启动Spring MVC 的注解功能,完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <util:list id="beanList">
                <ref bean="stringHttpMessageConverter"/>
                <ref bean="mappingJacksonHttpMessageConverter" />  
            </util:list>
        </property>
    </bean>
	    
    <!-- 返回字符串数据转换  -->  
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
    	<property name="supportedMediaTypes">
    		<list>
    			<value>text/html;charset=UTF-8</value>
    			<value>text/plain;charset=UTF-8</value>
    		</list>
    	</property>
    </bean> 
    
    <!-- 处理JSON数据转换的  为了处理返回的JSON数据的编码，默认是ISO-88859-1的，这里把它设置为UTF-8,解决有乱码的情况 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
</beans> 